{"version":3,"sources":["..\\..\\..\\..\\..\\assets\\cases\\anysdk/assets\\cases\\anysdk\\AnySDKList.js"],"names":["cc","Class","extends","Component","properties","itemPrefab","default","type","Prefab","scrollView","ScrollView","bufferZone","interfaceList","String","scriptName","onLoad","anysdk","tips","node","parent","getChildByName","exampleComp","getComponent","isSupported","hasSupport","opacity","initItemCount","length","itemList","updateTimer","updateInterval","lastContentPosY","initList","system","y","height","i","item","instantiate","itemName","init","addChild","updateItem","push","invoke","index","getPositionInView","worldPos","convertToWorldSpaceAR","position","viewPos","convertToNodeSpaceAR","update","dt","items","buffer","isDown","offset","itemNode","newIdx","newInfo"],"mappings":"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","file":"AnySDKList.js","sourceRoot":"..\\..\\..\\..\\..\\assets\\cases\\anysdk","sourcesContent":["cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        itemPrefab: {\n            default: null,\n            type: cc.Prefab\n        },\n        scrollView: cc.ScrollView,\n        bufferZone: 0, // when item is away from bufferZone, we relocate it\n        interfaceList: [cc.String],\n        scriptName: \"\"\n    },\n\n    onLoad () {\n        if (typeof anysdk === 'undefined') {\n            return;\n        }\n        var tips = this.scrollView.node.parent.getChildByName('Tips');\n        var exampleComp = this.scrollView.node.getComponent('BaseAnySDKExample');\n        var isSupported = exampleComp.hasSupport();\n        if (!isSupported) return;\n        tips.opacity = 0;\n        this.node.parent.parent.opacity = 255;\n        this.initItemCount = this.interfaceList.length;\n        this.itemList = [];\n        this.updateTimer = 0;\n        this.updateInterval = 0.2;\n        this.lastContentPosY = 0; // use this variable to detect if we are scrolling up or down\n        this.initList();\n        this.system = this.scrollView.getComponent(this.scriptName) ;\n    },\n\n    // use this for initialization\n    initList () {\n        let y = 0;\n        this.node.height = (this.interfaceList.length + 1) * 50;\n        for (let i = 0; i < this.initItemCount; ++i) {\n            let item = cc.instantiate(this.itemPrefab).getComponent('AnySDKItem');\n            let itemName = this.interfaceList[i];\n            item.init(this);\n            this.node.addChild(item.node);\n            y -= 50;\n            item.updateItem (i, y, itemName);\n            this.itemList.push(item);\n        }\n    },\n    \n    invoke: function(index){\n        if(index >= this.interfaceList.length) return;\n        this.system[this.interfaceList[index]]();\n    },\n\n    getPositionInView: function (item) { // get item position in scrollview's node space\n        let worldPos = item.parent.convertToWorldSpaceAR(item.position);\n        let viewPos = this.scrollView.node.convertToNodeSpaceAR(worldPos);\n        return viewPos;\n    },\n\n    update (dt) {\n        this.updateTimer += dt;\n        if (this.updateTimer < this.updateInterval) {\n            return; // we don't need to do the math every frame\n        }\n        this.updateTimer = 0;\n        let items = this.itemList;\n        let buffer = this.bufferZone;\n        let isDown = this.node.y < this.lastContentPosY; // scrolling direction\n        let offset = 50 * (this.initItemCount - 1);\n        for (let i = 0; i < this.initItemCount; ++i) {\n            let item = items[i];\n            let itemNode = item.node;\n            let viewPos = this.getPositionInView(itemNode);\n            if (isDown) {\n                // if away from buffer zone and not reaching top of content\n                if (viewPos.y < -buffer && itemNode.y + offset < 0) {\n                    let newIdx = item.index - (this.initItemCount - 1);\n                    let newInfo = this.interfaceList[newIdx];\n                    item.updateItem(newIdx, itemNode.y + offset, newInfo);\n                }\n            } else {\n                // if away from buffer zone and not reaching bottom of content\n                if (viewPos.y > buffer && itemNode.y - offset > -this.node.height) {\n                    let newIdx = item.index + (this.initItemCount - 1);\n                    let newInfo = this.interfaceList[newIdx];\n                    item.updateItem(newIdx, itemNode.y - offset, newInfo);\n                }\n            }\n        }\n        // update lastContentPosY\n        this.lastContentPosY = this.node.y;\n    },\n});\n"]}